name: Build Project

on:
  push:
    branches:
      - "main"
  pull_request:


jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint server/primary_load_balancer.py server/load_balancer.py server/secondary_load_balancer.py server/slave.py server/util.py

  build-primary:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT    
    - name: Build Server
      run: |
        docker build -t nimana/sad_project/message-broker-primary:${{ steps.vars.outputs.sha_short }} -f server/Dockerfile.primary server/
    - name: Login Docker
      run: |        
        echo "${{ vars.DOCKERHUB_PASSWORD }}" | docker login --username ${{ vars.DOCKERHUB_USERNAME }} --password-stdin
    - name: Push
      run: |
        docker push nimana/sad_project/message-broker-primary:${{ steps.vars.outputs.sha_short }}

  build-secondary:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT    
    - name: Build Server
      run: |
        docker build -t nimana/sad_project/message-broker-secondary:${{ steps.vars.outputs.sha_short }} -f server/Dockerfile.secondary server/
    - name: Login Docker
      run: |
        echo "${{ vars.DOCKERHUB_PASSWORD }}" | docker login --username ${{ vars.DOCKERHUB_USERNAME }} --password-stdin
    - name: Push
      run: |
        docker push nimana/sad_project/message-broker-secondary:${{ steps.vars.outputs.sha_short }}

  build-slave:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Build Clinet
      run: |
        docker build -t nimana/sad_project/message-broker-slave:${{ steps.vars.outputs.sha_short }} -f server/Dockerfile.slave server/
    - name: Login Docker
      run: |
        echo "${{ vars.DOCKERHUB_PASSWORD }}" | docker login --username ${{ vars.DOCKERHUB_USERNAME }} --password-stdin
    - name: Push
      run: |
        docker push nimana/sad_project/message-broker-slave:${{ steps.vars.outputs.sha_short }}

